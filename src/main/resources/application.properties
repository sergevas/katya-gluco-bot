quarkus.application.name=katya-gluco-bot
#quarkus.package.jar.type=uber-jar
#quarkus.package.jar.add-runner-suffix=false
quarkus.banner.enabled=false
#Scheduler
quarkus.scheduler.enabled=false
scheduler.period.accelerated=60
scheduler.period.default=600
scheduler.period.alert=1200
scheduler.every=${scheduler.period.accelerated}s
# InfluxDb server client config
influxdb/mp-rest/url=${INFLUXDB_SERVER_URL}
influxdb.username=${INFLUXDB_USER}
influxdb.password=${INFLUXDB_USER_PASSWORD}
influxdb.db=${INFLUXDB_DB}
influxdb.query=SELECT * FROM glucose ORDER BY time DESC LIMIT 1
# Telegram Bot config
telegram.bot-username=${TELEGRAM_BOT_USERNAME}
telegram.token=${TELEGRAM_TOKEN}
telegram.chat-ids[1]=${TELEGRAM_CHAT_ID_1}
telegram.chat-ids[2]=${TELEGRAM_CHAT_ID_2}
# Bot messages
telegram.messages.no-data=${TELEGRAM_MESSAGES_NO_DATA}
telegram.messages.message-unable-to-process=${TELEGRAM_MESSAGES_MESSAGE_UNABLE_TO_PROCESS}
# Recommendation model
quarkus.langchain4j.openai.base-url=${OPENAI_BASE_URL}
quarkus.langchain4j.openai.timeout=${OPENAI_TIMEOUT}
quarkus.langchain4j.openai.max-retries=${OPENAI_MAX_RETRIES}
quarkus.langchain4j.openai.api-key=${DEEPSEEK_API_KEY}
quarkus.langchain4j.openai.chat-model.model-name=${DEEPSEEK_MODEL_NAME}
quarkus.langchain4j.openai.chat-model.temperature=${OPENAI_TEMPERATURE}
# Recommendation messages
recommendation.messages.prompt=${RECOMMENDATION_MESSAGES_PROMPT}
recommendation.messages.request-invalid=${RECOMMENDATION_MESSAGES_REQUEST_INVALID}
recommendation.messages.mock-message=${RECOMMENDATION_MESSAGES_MOCK_MESSAGE}
recommendation.messages.mock-additional-info=${RECOMMENDATION_MESSAGES_MOCK_ADDITIONAL_INFO}
#Datasourse
db.schema.name=KATGB
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${KATGBDB_USERNAME}
quarkus.datasource.password=${KATGBDB_PASSWORD}
quarkus.datasource.jdbc.url=jdbc:h2:mem:KATGBDB;PASSWORD=katgb;USER=katgb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS KATGB\\;SET SCHEMA KATGB
#ORM
quarkus.hibernate-orm.database.default-schema=${db.schema.name}
quarkus.hibernate-orm.validate-in-dev-mode=false
quarkus.hibernate-orm.physical-naming-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
quarkus.hibernate-orm.packages=dev.sergevas.tool.katya.gluco.bot.nightscout.boundary.persistence.entity
quarkus.hibernate-orm.jdbc.statement-batch-size=50
#Flyway
quarkus.flyway.migrate-at-start=true
quarkus.flyway.default-schema=${db.schema.name}
quarkus.flyway.create-schemas=false
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=1.0.0
#dev profile
#%dev.quarkus.log.level=DEBUG
#%dev.quarkus.log.console.level=DEBUG
%dev.quarkus.log.category."dev.sergevas".level=DEBUG
%dev.quarkus.log.file.path=/opt/katya-gluco-bot/log/katya-gluco-bot.log
%dev.quarkus.rest-client.logging.scope=request-response
%dev.quarkus.rest-client.logging.body-limit=10000
%dev.quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.flyway.repeatable-sql-migration-prefix=INIT
%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.log.bind-parameters=true
%dev.quarkus.hibernate-orm.log.highlight-sql=false
#test profile
%test.quarkus.log.category."dev.sergevas".level=DEBUG
%test.quarkus.datasource.db-kind=h2
#%test.quarkus.flyway.repeatable-sql-migration-prefix=INIT
%test.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.log.highlight-sql=true
%dev.quarkus.datasource.dev-ui.allow-sql=true
